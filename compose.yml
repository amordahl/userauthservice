services:
  client:
    build:
      context: .
      target: client
    stdin_open: true
    tty: true
    environment:
      DATABASE_USER: user
      DATABASE_PASSWORD: password
      VALIDATION_SERVICE: validator
      DB_HOST: db
    depends_on:
      db:
        condition: service_healthy
      validator:
        condition: service_healthy
    networks:
      - app-network

  validator:
    build:
      context: .
      target: email-service
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=emails
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d emails"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
